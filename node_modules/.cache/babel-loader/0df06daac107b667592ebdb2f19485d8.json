{"ast":null,"code":"const url = \"https://jsonplaceholder.typicode.com/todos\"; // fetching all the todos\n\nexport const fetchTodo = async function () {\n  let data = [];\n\n  try {\n    const response = await fetch(url + \"?userId=1\");\n    data = await response.json();\n    return {\n      data,\n      success: true\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message\n    };\n  }\n}; // function for creating new tasks\n\nexport const addTaskHandler = async function (title, userId) {\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify({\n        title,\n        userId,\n        completed: false\n      })\n    });\n    const data = await response.json();\n    return {\n      success: true,\n      data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message\n    };\n  }\n}; // deleting a task\n\nexport const deleteTask = async function (id) {\n  try {\n    await fetch(url + `/${id}`, {\n      method: \"DELETE\"\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message\n    };\n  }\n}; // updating a task\n\nexport const updateTask = async function (task) {\n  try {\n    const response = await fetch(url + `/${task.id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(task),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    });\n    const data = await response.json();\n    return {\n      success: true,\n      data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message\n    };\n  }\n};","map":{"version":3,"names":["url","fetchTodo","data","response","fetch","json","success","error","message","addTaskHandler","title","userId","method","headers","body","JSON","stringify","completed","deleteTask","id","updateTask","task"],"sources":["D:/REVISE/Todo-List-Using-React-main/src/api/index.js"],"sourcesContent":["const url = \"https://jsonplaceholder.typicode.com/todos\";\n\n// fetching all the todos\nexport const fetchTodo = async function () {\n  let data = [];\n  try {\n    const response = await fetch(url + \"?userId=1\");\n    data = await response.json();\n    return {\n      data,\n      success: true,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message,\n    };\n  }\n};\n\n// function for creating new tasks\nexport const addTaskHandler = async function (title, userId) {\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        title,\n        userId,\n        completed: false,\n      }),\n    });\n\n    const data = await response.json();\n\n    return {\n      success: true,\n      data,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message,\n    };\n  }\n};\n\n// deleting a task\nexport const deleteTask = async function (id) {\n  try {\n    await fetch(url + `/${id}`, {\n      method: \"DELETE\",\n    });\n    return {\n      success: true,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message,\n    };\n  }\n};\n\n// updating a task\nexport const updateTask = async function (task) {\n  try {\n    const response = await fetch(url + `/${task.id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(task),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    });\n    const data = await response.json();\n    return {\n      success: true,\n      data,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message,\n    };\n  }\n};\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG,4CAAZ,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,kBAAkB;EACzC,IAAIC,IAAI,GAAG,EAAX;;EACA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,GAAG,WAAP,CAA5B;IACAE,IAAI,GAAG,MAAMC,QAAQ,CAACE,IAAT,EAAb;IACA,OAAO;MACLH,IADK;MAELI,OAAO,EAAE;IAFJ,CAAP;EAID,CAPD,CAOE,OAAOC,KAAP,EAAc;IACd,OAAO;MACLD,OAAO,EAAE,KADJ;MAELE,OAAO,EAAED,KAAK,CAACC;IAFV,CAAP;EAID;AACF,CAfM,C,CAiBP;;AACA,OAAO,MAAMC,cAAc,GAAG,gBAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;EAC3D,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAM;MAChCY,MAAM,EAAE,MADwB;MAEhCC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFuB;MAKhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBN,KADmB;QAEnBC,MAFmB;QAGnBM,SAAS,EAAE;MAHQ,CAAf;IAL0B,CAAN,CAA5B;IAYA,MAAMf,IAAI,GAAG,MAAMC,QAAQ,CAACE,IAAT,EAAnB;IAEA,OAAO;MACLC,OAAO,EAAE,IADJ;MAELJ;IAFK,CAAP;EAID,CAnBD,CAmBE,OAAOK,KAAP,EAAc;IACd,OAAO;MACLD,OAAO,EAAE,KADJ;MAELE,OAAO,EAAED,KAAK,CAACC;IAFV,CAAP;EAID;AACF,CA1BM,C,CA4BP;;AACA,OAAO,MAAMU,UAAU,GAAG,gBAAgBC,EAAhB,EAAoB;EAC5C,IAAI;IACF,MAAMf,KAAK,CAACJ,GAAG,GAAI,IAAGmB,EAAG,EAAd,EAAiB;MAC1BP,MAAM,EAAE;IADkB,CAAjB,CAAX;IAGA,OAAO;MACLN,OAAO,EAAE;IADJ,CAAP;EAGD,CAPD,CAOE,OAAOC,KAAP,EAAc;IACd,OAAO;MACLD,OAAO,EAAE,KADJ;MAELE,OAAO,EAAED,KAAK,CAACC;IAFV,CAAP;EAID;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMY,UAAU,GAAG,gBAAgBC,IAAhB,EAAsB;EAC9C,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,GAAI,IAAGqB,IAAI,CAACF,EAAG,EAAnB,EAAsB;MAChDP,MAAM,EAAE,OADwC;MAEhDE,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeK,IAAf,CAF0C;MAGhDR,OAAO,EAAE;QACP,gBAAgB;MADT;IAHuC,CAAtB,CAA5B;IAOA,MAAMX,IAAI,GAAG,MAAMC,QAAQ,CAACE,IAAT,EAAnB;IACA,OAAO;MACLC,OAAO,EAAE,IADJ;MAELJ;IAFK,CAAP;EAID,CAbD,CAaE,OAAOK,KAAP,EAAc;IACd,OAAO;MACLD,OAAO,EAAE,KADJ;MAELE,OAAO,EAAED,KAAK,CAACC;IAFV,CAAP;EAID;AACF,CApBM"},"metadata":{},"sourceType":"module"}