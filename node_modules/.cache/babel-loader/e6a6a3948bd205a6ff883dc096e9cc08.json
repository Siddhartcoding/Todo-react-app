{"ast":null,"code":"import _regeneratorRuntime from \"D:/Todo-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Todo-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar url = \"https://jsonplaceholder.typicode.com/todos\"; // fetching all the todos\n\nexport var fetchTodo = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var data, response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = [];\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(url + \"?userId=1\");\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: data,\n              success: true\n            });\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", {\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n\n  return function fetchTodo() {\n    return _ref.apply(this, arguments);\n  };\n}(); // function for creating new tasks\n\nexport var addTaskHandler = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(title, userId) {\n    var response, data;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(url, {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n              },\n              body: JSON.stringify({\n                title: title,\n                userId: userId,\n                completed: false\n              })\n            });\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.json();\n\n          case 6:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              success: true,\n              data: data\n            });\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", {\n              success: false,\n              message: _context2.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n\n  return function addTaskHandler(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // deleting a task\n\nexport var deleteTask = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return fetch(url + \"/\".concat(id), {\n              method: \"DELETE\"\n            });\n\n          case 3:\n            return _context3.abrupt(\"return\", {\n              success: true\n            });\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", {\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 6]]);\n  }));\n\n  return function deleteTask(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // updating a task\n\nexport var updateTask = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(task) {\n    var response, data;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return fetch(url + \"/\".concat(task.id), {\n              method: \"PATCH\",\n              body: JSON.stringify(task),\n              headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n              }\n            });\n\n          case 3:\n            response = _context4.sent;\n            _context4.next = 6;\n            return response.json();\n\n          case 6:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", {\n              success: true,\n              data: data\n            });\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](0);\n            return _context4.abrupt(\"return\", {\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 10]]);\n  }));\n\n  return function updateTask(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["url","fetchTodo","data","fetch","response","json","success","message","addTaskHandler","title","userId","method","headers","body","JSON","stringify","completed","deleteTask","id","updateTask","task"],"sources":["D:/Todo-react-app/src/api/index.js"],"sourcesContent":["const url = \"https://jsonplaceholder.typicode.com/todos\";\n\n// fetching all the todos\nexport const fetchTodo = async function () {\n  let data = [];\n  try {\n    const response = await fetch(url + \"?userId=1\");\n    data = await response.json();\n    return {\n      data,\n      success: true,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message,\n    };\n  }\n};\n\n// function for creating new tasks\nexport const addTaskHandler = async function (title, userId) {\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        title,\n        userId,\n        completed: false,\n      }),\n    });\n\n    const data = await response.json();\n\n    return {\n      success: true,\n      data,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message,\n    };\n  }\n};\n\n// deleting a task\nexport const deleteTask = async function (id) {\n  try {\n    await fetch(url + `/${id}`, {\n      method: \"DELETE\",\n    });\n    return {\n      success: true,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message,\n    };\n  }\n};\n\n// updating a task\nexport const updateTask = async function (task) {\n  try {\n    const response = await fetch(url + `/${task.id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(task),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    });\n    const data = await response.json();\n    return {\n      success: true,\n      data,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      message: error.message,\n    };\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}